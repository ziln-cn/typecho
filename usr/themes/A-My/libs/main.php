<?php
/* 0Theme */
 class LAuth { private $url; private $appic; private $sign; public function __construct($url, $appic, $sign) { $this->url = $url; $this->appic = $appic; $this->sign = $sign; } private function authcode($string, $operation = "\104\105\103\x4f\104\x45", $key = '', $expiry = 0) { goto utyVf; z9WX5: KmwEH: $i++; goto lVGk8; Yg1yS: if ($operation == "\104\105\x43\x4f\x44\105") { goto nkzo7; } return $keyc . str_replace("\x3d", '', base64_encode($result)); goto CxfOW; nkzo7: if ((substr($result, 0, 10) == 0 || substr($result, 0, 10) - time() > 0) && substr($result, 10, 16) == substr(md5(substr($result, 26) . $keyb), 0, 16)) { goto vtlj5; } return ''; goto z23kC; z23kC: goto MASyS; vtlj5: return substr($result, 26); MASyS: CxfOW: goto Qcsew; YIBU0: $box = range(0, 255); $rndkey = array(); $i = 0; B9bZv: if (!($i <= 255)) { goto DrTR6; } $rndkey[$i] = ord($cryptkey[$i % $key_length]); CQl4C: $i++; goto B9bZv; DrTR6: goto gyxbw; lvVV9: I0dzZ: $a = $j = $i = 0; lVGk8: if (!($i < $string_length)) { goto Yg1yS; } $a = ($a + 1) % 256; $j = ($j + $box[$a]) % 256; $tmp = $box[$a]; $box[$a] = $box[$j]; $box[$j] = $tmp; $result .= chr(ord($string[$i]) ^ $box[($box[$a] + $box[$j]) % 256]); goto z9WX5; gyxbw: $j = $i = 0; t73xx: if (!($i < 256)) { goto I0dzZ; } $j = ($j + $box[$i] + $rndkey[$i]) % 256; $tmp = $box[$i]; $box[$i] = $box[$j]; $box[$j] = $tmp; jaxB1: $i++; goto t73xx; goto lvVV9; utyVf: $ckey_length = 4; $key = md5($key ? $key : $GLOBALS["\x64\151\163\x63\x75\172\137\141\165\x74\150\137\x6b\x65\x79"]); $keya = md5(substr($key, 0, 16)); $keyb = md5(substr($key, 16, 16)); $keyc = $ckey_length ? $operation == "\104\105\103\117\104\x45" ? substr($string, 0, $ckey_length) : substr(md5(microtime()), -$ckey_length) : ''; $cryptkey = $keya . md5($keya . $keyc); $key_length = strlen($cryptkey); $string = $operation == "\104\105\x43\x4f\x44\105" ? base64_decode(substr($string, $ckey_length)) : sprintf("\x25\x30\x31\60\x64", $expiry ? $expiry + time() : 0) . substr(md5($string . $keyb), 0, 16) . $string; $string_length = strlen($string); $result = ''; goto YIBU0; Qcsew: } private function post($url, $data) { $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch, CURLOPT_POST, 1); curl_setopt($ch, CURLOPT_POSTFIELDS, $data); curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); $output = curl_exec($ch); curl_close($ch); return $output; } public function check() { $ch = curl_init(); $timeout = 3; curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch, CURLOPT_HEADER, 1); curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $timeout); curl_setopt($ch, CURLOPT_URL, $this->url); curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); curl_exec($ch); $httpcode = curl_getinfo($ch, CURLINFO_HTTP_CODE); curl_close($ch); if ($httpcode != 200) { goto aKqvc; } return array("\x6d\x73\147" => "\xe6\255\243\xe5\xb8\xb8\xe8\256\xbf\xe9\x97\256"); goto nGQxp; aKqvc: return array("\155\163\x67" => "\xe9\235\236\xe6\263\225\350\256\xbf\351\227\xae"); nGQxp: } private function uuid($name) { $namespace = md5($name); if (!(preg_match("\57\136\134\173\x3f\x5b\x30\x2d\x39\141\x2d\146\x5d\173\70\175\134\x2d\77\x5b\x30\x2d\x39\141\x2d\146\x5d\173\64\x7d\x5c\55\x3f\133\x30\x2d\x39\141\55\146\x5d\173\64\175\x5c\x2d\x3f" . "\x5b\60\x2d\x39\141\55\146\x5d\173\64\x7d\134\55\x3f\x5b\60\x2d\x39\141\55\146\x5d\173\61\x32\x7d\x5c\175\x3f\44\x2f\151", $namespace) !== 1)) { goto XjkoG; } return false; XjkoG: $nhex = str_replace(array("\55", "\x7b", "\175"), '', $namespace); $nstr = ''; $i = 0; M5bDp: if (!($i < strlen($nhex))) { goto CIlzQ; } $nstr .= chr(hexdec($nhex[$i] . $nhex[$i + 1])); ANcpR: $i += 2; goto M5bDp; CIlzQ: $hash = sha1($nstr . $_SERVER["\110\124\124\x50\x5f\110\x4f\123\124"]); return sprintf("\x25\x30\70\163\x2d\x25\60\x34\x73\x2d\45\60\x34\170\55\45\60\64\170\55\45\61\x32\x73", substr($hash, 0, 8), substr($hash, 8, 4), hexdec(substr($hash, 12, 4)) & 0xfff | 0x5000, hexdec(substr($hash, 16, 4)) & 0x3fff | 0x8000, substr($hash, 20, 12)); } public function start($A, $B, $C, $time = "\63\66\60\60") { if (empty($_SESSION[$A]) || self::authcode($_SESSION[$A], "\104\105\x43\117\x44\105", $B) != $C) { goto dBm8z; } $json = array("\155\163\x67" => "\346\xad\xa3\xe7\x89\210\346\x8e\210\346\235\x83"); goto ZVt81; dBm8z: $return = json_decode(self::post($this->url . "\57\x61\x70\151\57\143\x68\x65\x63\x6b\x2f\x61\x75\164\x68\163\x6f\154\x65", array("\141\160\x70\151\143" => $this->appic, "\144\x61\164\141" => $_SERVER["\110\124\124\x50\x5f\110\117\123\x54"], "\x73\151\x67\156" => md5(self::uuid($this->sign)))), true); if ($return["\x63\x6f\144\x65"] == 1) { goto cA5F2; } $json = array("\155\163\147" => "\xe6\xa3\200\346\265\213\xe6\216\x88\xe6\x9d\203\xe5\244\261\350\264\245\x20\345\216\x9f\xe5\x9b\xa0\x3a" . $return["\x6d\163\x67"]); goto NMjzI; cA5F2: $_SESSION[$A] = self::authcode($C, "\x45\116\x43\x4f\x44\x45", $B, $time); $json = array("\155\163\x67" => "\xe6\255\xa3\347\x89\210\346\x8e\x88\xe6\x9d\x83"); NMjzI: ZVt81: return $json; } }